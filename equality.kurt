; equality
load propositional

;; syntax
infix = 20 20  ; higher binding power than space, equality is left-associative
bool  = 0      ; equations are boolean, however, the LHS and RHS can be anything
sym   =        ; equality is symmetric
chain =        ; equality is chainable


infix ≠ 20 20 ; inequality, note it is not chainable
bool  ≠ 0
sym   ≠
; chain ≠  ; not chainable

;; inference rules
use $a = $a                                               "equal-intro"
use (sub $x $a %A) and ($a = $b)  implies  (sub $x $b %A) "equal-elim"

use not ($a = $b) implies  $a ≠ $b                        "not-equal-intro"
use $a ≠ $b       implies  not ($a = $b)                  "not-equal-elim"

;; anything else?
;  we can also combine both rules
; use ($a = $b) and (sub $x $a $A = sub $x $a $A)  implies  (sub $x $a $A = sub $x $b $A)  "term-replacement"
;  e.g.
;  other notation
;  $a = $b and $f($a) = $f($a)  implies  $f($a) = $f($b)

; for automatic testing we add the following line:
;;; Proof checked.